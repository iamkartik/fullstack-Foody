mixin storeForm(store = {})
    // in case of edit the store variable gets the store data
    // in case of add the store variable defaults to an empty object

    form(action=`/add/${store._id || ''}` method="POST" class="card" enctype="multipart/form-data")
        // the name of input should match that of schema defined in model
        // if name="desc" in form it will not work ,it has to be name="description"
        label(for="name") Name
        input(type="text" name="name" value=store.name)
        label(for="description") Description
        // textarea there is no value so set with =
        textarea(name="description")= store.description
        //- Image upload code 
        label(for="photo") Photo
                // only accept image types of gif , png ,jpeg ...
                input(type="file" id="photo" name="photo" accept="image/gif,image/png,image/jpeg")
                //- if already there is a photo then display it
                if store.photo
                        img(src=`/uploads/${store.photo}` alt=store.name width=200)
        //- address lat and long . In app.js bodyparser has extended as true so that we can use 
        //- nested properties
        label(for="address") Address
        //- address isthe nested property of location ie location.address
        //- for add page store.location.address will not exist so need to put in () and run in &&
        input(type="text" id="address" name="location[address]" 
                value=(store.location&&store.location.address))
        //- lat and long , mongodb takes longitute before latitude
        label(for="lng") Address lng
        input(type="text" id="lng" name="location[coordinates][0]" 
                value=(store.location&&store.location.coordinates[0]))
        label(for="lat") Address lat
        input(type="text" id="lat" name="location[coordinates][1]" 
                value=(store.location&&store.location.coordinates[1]))                
        - const choices = ['Wifi','Open Late','Family Friendly','Vegetarian','Licensed']
        - // for edit define initialize an array
        - const tags = store.tags || [] 
        // define ul and loop over the choices 
        ul.tags
            each choice in choices
                .tag.tag__choice
                    input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice)))
                    label(for=choice) #{choice}
        input(type="submit" value="Save !" class="button")            